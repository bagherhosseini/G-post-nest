generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                String    @id @default(uuid())
  name              String
  userName          String    @unique
  email             String    @unique
  password          String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  friendReqSender   Friends[] @relation("FriendReqSender")
  friendreqReceiver Friends[] @relation("FriendreqReceiver")

  messageSender   Messages[] @relation("MessageSender")
  messageReceiver Messages[] @relation("MessageReceiver")
}

model Friends {
  id                  String @id @default(uuid())
  status              String
  reqSenderId         String
  reqSenderName       String
  reqSenderUserName   String
  reqReceiverId       String
  reqReceiverName     String
  reqReceiverUserName String
  reqSender           User   @relation("FriendReqSender", fields: [reqSenderId], references: [id])
  reqReceiver         User   @relation("FriendreqReceiver", fields: [reqReceiverId], references: [id])

  @@unique([reqSenderId, reqReceiverId], name: "unique_friendship")
  @@index([reqReceiverId], map: "index_req_receiver_id")
}

model Messages {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  message    String
  type       String
  date       String 

  sender   User @relation("MessageSender", fields: [senderId], references: [id])
  receiver User @relation("MessageReceiver", fields: [receiverId], references: [id])

  @@index([senderId])
  @@index([receiverId])
}
